function FindProxyForURL(url, host) {
	const GROOVESHARK = '*.grooveshark.com';
	const PLAIN_GS = 'grooveshark.com';
	const GS_CDN = '*.gs-cdn.net';
	var proxy = 'DIRECT';
	
	// we're only catching grooveshark.com and www.grooveshark.com explicitly,
	// so everything else (especially the music) goes unproxy'd
	if(shExpMatch(host, GROOVESHARK) || (host === PLAIN_GS) || shExpMatch(host, GS_CDN)) {
		// alert('Proxy for host ' + host);
		const HTTP_PROXIES = new Array(
			// France
			'88.191.137.186:3128',
			'78.192.196.117:3128 ',
			// Switzerland
			'46.19.136.221:8080',
			'81.17.31.36:8080',
			'81.17.24.177:8080',
			// UK
			'88.208.203.129:3128',
			'109.123.126.253:8080',
			'94.102.153.150:8888',
			'217.36.19.178:3128',
			'83.170.117.44:3128',
			'46.37.169.211:3128',
			'217.23.230.252:443 ',
			// United States
			'209.118.181.29:80',
			'72.64.146.135:8080',
			'64.89.241.9:3128',
			'64.85.181.44:8080',
			'65.51.181.123:8080',
			'74.221.64.9:3128',
			'107.22.164.23:3128',
			'71.13.156.124:3128',
			'72.64.146.135:3128',
			'66.60.148.11:8080',
			'50.57.175.200:80',
			'69.163.204.84:3128',
			'64.89.249.107:3128',
			'96.35.151.74:8080',
			'96.41.66.19:3128',
			'97.75.242.33:8080',
			'98.109.199.166:3128',
			'98.109.199.166:8080',
			'64.120.226.94:8080',
			'97.75.242.129:8080',
			'74.94.44.210:8080',
			'72.64.146.136:3128',
			'216.155.139.115:3128',
			'212.118.244.167:80',
			'75.149.160.13:3128',
			'64.31.25.65:3128',
			'76.164.222.35:9090',
			'216.18.232.156:3128',
			'184.106.168.253:80',
			'97.74.74.96:443',
			'64.85.181.45:8080',
			'173.14.37.125:80',
			'50.28.33.210:3128',
			'170.201.184.71:80',
			'173.13.251.21:3128',
			'50.28.34.177:3128',
			'69.65.46.62:8080',
			'69.65.43.167:8080',
			'97.79.209.86:8080',
			'64.79.77.190:8080',
			'72.64.146.136:8080',
			'65.51.47.106:80',
			'67.216.65.253:8080',
			'50.28.33.210:80'
		);
		
		const HTTPS_PROXIES = new Array(
			// United States
			'70.90.120.141:443',
			'69.74.22.248:443',
			'70.150.202.66:443',
			'70.229.82.201:443',
			'65.162.212.132:443',
			'65.162.212.134:443',
			'157.95.56.15:80',
			'24.173.170.58:443',
			'173.14.37.125:80',
			'204.100.205.5:8080',
			'174.129.43.115:80',
			'65.125.151.21:8080',
			'173.13.251.21:3128',
			'75.77.191.81:8080',
			'65.162.212.133:443',
			'24.231.187.50:3128',
			'63.145.10.178:443',
			'97.79.209.86:8080',
			'64.22.241.169:8080',
			'24.106.157.14:8118',
			'70.88.97.82:443',
			'184.73.255.250:80',
			'72.64.146.136:8080',
			'65.51.47.106:80',
			'67.216.65.253:8080',
			'64.37.51.33:80',
			'50.28.33.210:80',
			'66.184.248.186:443',
			'209.118.181.29:80',
			'72.64.146.135:8080',
			'209.118.181.120:3128',
			'107.21.85.22:80',
			'65.51.181.123:8080',
			'66.210.32.150:3128',
			'74.221.64.9:3128',
			'107.22.164.23:3128',
			'97.75.240.174:8080',
			'70.154.102.150:443',
			'71.13.156.124:3128',
			'72.64.146.135:3128',
			'66.60.148.11:8080',
			'70.91.172.133:443',
			'173.164.176.195:8080',
			'157.238.208.248:80',
			'64.89.249.107:3128',
			'208.109.168.64:81',
			'12.42.35.99:443',
			'97.75.242.33:8080',
			'216.49.106.41:8080',
			'98.109.199.166:3128',
			'98.109.199.166:8080',
			'72.64.146.73:3128',
			'146.12.3.29:80',
			'146.12.3.6:80',
			'69.74.22.10:443',
			'97.75.242.1:8080',
			'74.94.44.210:8080',
			'75.98.169.143:80',
			'24.229.89.30:80',
			'107.20.65.93:80',
			'212.118.244.167:80',
			'107.21.223.122:80',
			'75.149.160.13:3128',
			'71.16.133.242:443',
			'64.31.25.65:3128',
			'76.164.222.35:9090',
			'216.18.232.156:3128',
			'72.250.163.103:8080',
			'24.123.80.50:443',
			'66.64.135.139:443',
			'12.69.3.18:443',
			'71.13.68.186:443',
			'70.91.125.194:443',
			'97.74.74.96:443'
		);
		
		var protocol = url.split(':', 1);
		var proxyArray = null;
		
		if(protocol.length < 1) { // no protocol/schema in URL. This would be weird, but we're not taking chances
			return proxy; // still 'DIRECT' at this point, leaving this non-hardcoded in case the default changes at some point
		}
		
		protocol = protocol[0]; // the magic of weakly-typed languages
		
		switch(protocol) {
			case 'http':
				proxyArray = HTTP_PROXIES;
				break;
			case 'https':
				proxyArray = HTTPS_PROXIES;
				break;
			default:
				//DEBUG alert('Proxy for ' + host + ' via ' + protocol + ' is ' + proxy);
				return proxy; // still 'DIRECT' at this point, leaving this non-hardcoded in case the default changes at some point
		}
	
		proxy = 'PROXY ' + proxyArray.join('; PROXY ');
	}
	
	// DEBUG alert('Proxy for ' + host + ' via ' + protocol + ' is ' + proxy); // protocol will be undefined if we're not going to GS. That's fine.
	return proxy;
}
