function FindProxyForURL(url, host) {
	const GROOVESHARK = 'grooveshark.com';
	var proxy = 'DIRECT';
	
	// we're only catching grooveshark.com and www.grooveshark.com explicitly,
	// so everything else (especially the music) goes unproxy'd
	if((host === GROOVESHARK) || (host === 'www.' + GROOVESHARK)) { // shExpMatch(host, '*.' + GROOVESHARK) // we'll use this if the wall gets thicker
		const HTTP_PROXIES = new Array(
			// UK
			'83.170.113.110:8787',
			'212.219.0.20:8080',
			'212.219.0.20:3128',
			'109.75.171.73:8080',
			'109.109.241.138:3128',
			'109.204.9.25:3128',
			'109.123.122.162:3128',
			'31.3.249.23:80',
			// France
			'84.246.226.180:80',
			'88.191.144.160:54321',
			'80.12.3.86:80',
			// Switzerland
			'46.19.143.93:80',
			'178.209.50.211:8080',
			'109.164.217.29:80',
			'46.19.136.221:8080',
			'46.19.143.93:8080',
			// Austria
			'81.223.49.102:8080',
			'81.223.49.107:8080',
			'81.223.49.110:8080',
			// United States
			'209.81.97.142:80',
			'207.211.86.196:80',
			'98.109.199.166:8080',
			'98.109.199.166:3128',
			'174.138.167.164:3128',
			'184.58.137.216:36081',
			'184.73.39.100:3128',
			'184.82.131.106:3128',
			'8.25.1.39:8080',
			'107.22.32.99:3128',
			'184.154.55.239:8080',
			'184.106.168.253:80',
			'72.64.146.135:8080',
			'184.170.245.165:3128',
			'107.20.205.24:80',
			'50.78.51.25:8080',
			'174.137.149.228:8080',
			'74.94.44.210:8080',
			'72.64.146.136:8080',
			'72.248.114.199:8080',
			'67.216.65.253:8080',
			'174.137.152.60:8080',
			'173.248.140.35:8080',
			'173.212.39.137:80',
			'212.118.244.167:80',
			'173.212.39.138:80',
			'216.155.139.115:3128',
			'69.163.96.2:8080',
			'72.64.146.135:3128',
			'70.129.197.8:8080',
			'70.129.197.8:80',
			'184.170.245.163:3128',
			'74.63.210.24:3128',
			'174.137.149.230:8080',
			'174.137.149.229:8080',
			'65.51.47.106:80',
			'209.81.97.138:80',
			'72.64.146.136:3128',
			'69.60.119.190:8081',
			'24.247.221.187:3128',
			'107.21.239.21:80',
			'69.163.96.22:8080',
			'216.229.39.61:8080',
			'184.170.245.162:3128',
			'173.13.36.177:8080',
			'97.81.243.127:8080'
		);
		
		const HTTPS_PROXIES = new Array(
			// United States
			'173.248.140.35:8080',
			'66.184.248.186:443',
			'212.118.244.167:80',
			'69.163.96.2:8080',
			'50.54.6.98:80',
			'208.109.168.64:81',
			'72.64.146.135:3128',
			'74.63.210.23:3128',
			'184.73.255.250:80',
			'70.229.82.201:443',
			'66.210.32.150:3128',
			'74.11.95.200:3128',
			'70.129.197.8:80',
			'70.129.197.8:8080',
			'216.49.106.41:8080',
			'69.74.22.248:443',
			'64.85.181.44:8080',
			'174.137.149.230:8080',
			'174.137.149.229:8080',
			'12.69.3.18:443',
			'24.229.89.30:80',
			'66.64.135.139:443',
			'72.64.146.136:3128',
			'65.162.212.134:443',
			'69.60.119.190:8081',
			'50.28.33.210:80',
			'66.0.50.194:443',
			'65.162.212.132:443',
			'65.162.212.133:443',
			'69.163.96.22:8080',
			'64.122.38.178:443',
			'71.16.133.242:443',
			'184.170.245.162:3128',
			'216.229.39.61:8080',
			'50.19.217.60:80',
			'24.173.170.58:443',
			'50.73.176.166:8080',
			'173.13.36.177:8080',
			'157.238.208.248:80',
			'72.44.80.20:3128',
			'98.109.199.166:8080',
			'98.109.199.166:3128',
			'174.138.167.164:3128',
			'70.150.202.66:443',
			'71.13.68.186:443',
			'184.154.55.239:80',
			'38.104.90.26:8080',
			'24.123.80.50:443',
			'184.73.39.100:3128',
			'184.82.131.106:3128'
		);
		
		var protocol = url.split(':', 1);
		var proxyArray = null;
		
		if(protocol.length < 1) { // no protocol/schema in URL. This would be weird, but we're not taking chances
			return proxy; // still 'DIRECT' at this point, leaving this non-hardcoded in case the default changes at some point
		}
		
		protocol = protocol[0]; // the magic of weakly-typed languages
		
		switch(protocol) {
			case 'http':
				proxyArray = HTTP_PROXIES;
				break;
			case 'https':
				proxyArray = HTTPS_PROXIES;
				break;
			default:
				//DEBUG alert('Proxy for ' + host + ' via ' + protocol + ' is ' + proxy);
				return proxy; // still 'DIRECT' at this point, leaving this non-hardcoded in case the default changes at some point
		}
	
		proxy = 'PROXY ' + proxyArray.join('; PROXY ');
	}
	
	// DEBUG alert('Proxy for ' + host + ' via ' + protocol + ' is ' + proxy); // protocol will be undefined if we're not going to GS. That's fine.
	return proxy;
}
